import org.apache.cxf.jaxws.JaxWsProxyFactoryBean;

import java.rmi.RemoteException;
import java.util.Scanner;
import default_package.FrontEndClinica;
import default_package.IOException_Exception;
import default_package.MalformedURLException_Exception;
import default_package.NotBoundException_Exception;


public class Consumer {
	//adasfds

    public static void main(String[] args) throws NotBoundException_Exception, MalformedURLException_Exception, IOException_Exception { //, MalformedURLException_Exception

        JaxWsProxyFactoryBean factory = new JaxWsProxyFactoryBean();        

        // Use the URL defined in the soap address portion of the WSDL
        factory.setAddress("http://localhost:8080/CD_FrontEnd_Soap/services/FrontEnd_ClinicaPort"); 
       
        // Utilize the class which was auto-generated by Apache CXF wsdl2java
        factory.setServiceClass(FrontEndClinica.class);        

        Object client = factory.create();
        Scanner scanner = new Scanner(System.in);
        
        System.out.println("1. Login");
        System.out.println("2. registar");
        
        int choice = scanner.nextInt();
        scanner.nextLine(); // Consumir a quebra de linha após a entrada do número
        String clientIDString = "0";

        if (choice == 1) {
            // Lógica de login
            while (clientIDString.equals("0")) {
                System.out.println("Insira o user name: ");
                String username = scanner.nextLine(); // Entrada do username
                System.out.println("Insira a palavra passe: ");
                String pass = scanner.nextLine(); // Entrada da senha

                clientIDString = ((FrontEndClinica) client).autenticar(username, pass);
                if (clientIDString.equals("0")) {
                    System.out.println("Credenciais erradas. Tente novamente.");
                }
            }
            System.out.println("Login bem-sucedido! ID do cliente: " + clientIDString);
        } else if (choice == 2) {
            // Lógica de registro
            String registado = "Usuário já existe!";
            while (registado.equals("Usuário já existe!")) {
                System.out.println("Insira o user name: ");
                String username = scanner.nextLine(); // Entrada do username
                System.out.println("Insira a palavra passe a definir: ");
                String pass = scanner.nextLine(); // Entrada da senha

                registado = ((FrontEndClinica) client).registar(username, pass);
                if (registado.equals("Usuário já existe!")) {
                    System.out.println("Erro: Usuário já existe! Tente novamente.");
                }
            }
            System.out.println("Registro bem-sucedido! Por favor, faça login.");

            // Lógica de login após registro
            while (clientIDString.equals("0")) {
                System.out.println("Insira o user name: ");
                String username = scanner.nextLine(); // Entrada do username
                System.out.println("Insira a palavra passe: ");
                String pass = scanner.nextLine(); // Entrada da senha

                clientIDString = ((FrontEndClinica) client).autenticar(username, pass);
                if (clientIDString.equals("0")) {
                    System.out.println("Credenciais erradas. Tente novamente.");
                }
            }
            System.out.println("Login bem-sucedido! ID do cliente: " + clientIDString);
        } else {
            System.out.println("Opção inválida! Por favor, escolha 1 (Login) ou 2 (Registrar).");
        }

        
        Integer clientID = 0;

        try {
            clientID = Integer.valueOf(clientIDString);  // Converts String to Integer
            System.out.println("clientIdAsInteger: " + clientID);  // Prints the Integer object
        } catch (NumberFormatException e) {
            System.out.println("Invalid number format: " + clientIDString);  // Catches invalid format cases
        }

        
        
      
        
        while (clientID != 0) {
            System.out.println("\n--- SOAP Client Menu ---");
            System.out.println("1. Listar Consultas");
            System.out.println("2. Marcar consulta");
            System.out.println("3. Cancelar consulta");
            System.out.println("5. Sair");
            System.out.print("Escolha uma opcao: ");
            
            choice = 0;
            choice = scanner.nextInt();
            scanner.nextLine();

            switch (choice) {
                case 1:
                    try {	
                    	String response = ((FrontEndClinica)client).listarConsultasServer(clientID);
                    	System.out.println(response); 
                    	
                    } catch (SecurityException | IllegalArgumentException e) {
                        e.printStackTrace();
                    }
                    break;
                    
                case 2:
                	
                	//  String marcarConsulta(int dia, int mes, int ano, int hora, int clientID, int clinicaID, int especialidadeID) throws RemoteException;
                    System.out.println("Insira o dia: ");
                    int dia = scanner.nextInt();
                    scanner.nextLine();
                    System.out.println("Insira o mes: ");
                    int mes = scanner.nextInt();
                    scanner.nextLine();
                    System.out.println("Insira o ano: ");
                    int ano = scanner.nextInt();
                    scanner.nextLine();
                    System.out.println("Insira a hora: ");
                    int hora = scanner.nextInt();
                    scanner.nextLine();
                    
                    
                    
                    try {	
                    	String response = ((FrontEndClinica)client).listarClinicasServer();
                    	System.out.println(response); 
                    	
                    } catch (SecurityException | IllegalArgumentException e) {
                        e.printStackTrace();
                    }
                    
                    
                    System.out.println("Insira a clinica: ");
                    int clinicaID = scanner.nextInt();
                    scanner.nextLine();

                    
                    
                    
                    try {	
                    	String response = ((FrontEndClinica)client).listarEspecialidadesServer(clinicaID);
                    	System.out.println(response); 
                    	
                    } catch (SecurityException | IllegalArgumentException e) {
                        e.printStackTrace();
                    }
                    
                    
                    System.out.println("Insira a especialidade: ");
                    int especialidadeID = scanner.nextInt();
                    scanner.nextLine();
                
                    
                    
                    
                    try {	
                    	String response = ((FrontEndClinica)client).marcarConsultasServer(dia, mes, ano, hora, clientID, clinicaID, especialidadeID);
                    	System.out.println(response); 
                    	
                    } catch (SecurityException | IllegalArgumentException e) {
                        e.printStackTrace();
                    }
                    
                    
                    
                    
                    
                   //Ola
                    
                    
                    break;
                    
                case 3:
                	
                	try {	
                    	String response = ((FrontEndClinica)client).listarConsultasServer(clientID);
                    	System.out.println(response); 
                    	
                    } catch (SecurityException | IllegalArgumentException e) {
                        e.printStackTrace();
                    }
                	
                	
                	
                    System.out.println("Insira o número Consulta a cancelar: ");
                    int idConsulta = scanner.nextInt();
                 
                    try {	
                    	String response = ((FrontEndClinica)client).removerConsultaServer(idConsulta);
                    	System.out.println(response); 
                    	
                    } catch (SecurityException | IllegalArgumentException e) {
                        e.printStackTrace();
                    }
                    
                    
                    break;
                
                default:
                    System.out.println("Opcao invalida. Tente novamente.");
            }
        }
        
        
        
    }
}









