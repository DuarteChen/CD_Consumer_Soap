import org.apache.cxf.jaxws.JaxWsProxyFactoryBean;

import java.rmi.RemoteException;
import java.util.Scanner;
import default_package.FrontEndClinica;
import default_package.MalformedURLException_Exception;
import default_package.NotBoundException_Exception;


public class Consumer {
	//adasfds

    public static void main(String[] args) throws NotBoundException_Exception, MalformedURLException_Exception { //, MalformedURLException_Exception

        JaxWsProxyFactoryBean factory = new JaxWsProxyFactoryBean();        

        // Use the URL defined in the soap address portion of the WSDL
        factory.setAddress("http://localhost:8080/CD_FrontEnd_Soap/services/FrontEnd_ClinicaPort"); 
       
        // Utilize the class which was auto-generated by Apache CXF wsdl2java
        factory.setServiceClass(FrontEndClinica.class);        

        Object client = factory.create();
        Scanner scanner = new Scanner(System.in);
        System.out.println("Insira o ID do cliente: ");
        int clientID = scanner.nextInt(); //aqui vai acontecer a autenticação
        scanner.nextLine();
        
        while (true) {
            System.out.println("\n--- SOAP Client Menu ---");
            System.out.println("1. Listar Consultas");
            System.out.println("2. Marcar consulta");
            System.out.println("3. Cancelar consulta");
            System.out.println("4. Sair");
            System.out.print("Escolha uma opcao: ");
            
            int choice = scanner.nextInt();
            scanner.nextLine();

            switch (choice) {
                case 1:
                    try {	
                    	String response = ((FrontEndClinica)client).listarConsultasServer(clientID);
                    	System.out.println(response); 
                    	
                    } catch (SecurityException | IllegalArgumentException e) {
                        e.printStackTrace();
                    }
                    break;
                    
                case 2:
                	
                	//  String marcarConsulta(int dia, int mes, int ano, int hora, int clientID, int clinicaID, int especialidadeID) throws RemoteException;
                    System.out.println("Insira o dia: ");
                    int dia = scanner.nextInt();
                    scanner.nextLine();
                    System.out.println("Insira o mes: ");
                    int mes = scanner.nextInt();
                    scanner.nextLine();
                    System.out.println("Insira o ano: ");
                    int ano = scanner.nextInt();
                    scanner.nextLine();
                    System.out.println("Insira a hora: ");
                    int hora = scanner.nextInt();
                    scanner.nextLine();
                    
                    
                    
                    try {	
                    	String response = ((FrontEndClinica)client).listarClinicasServer();
                    	System.out.println(response); 
                    	
                    } catch (SecurityException | IllegalArgumentException e) {
                        e.printStackTrace();
                    }
                    
                    
                    System.out.println("Insira a clinica: ");
                    int clinicaID = scanner.nextInt();
                    scanner.nextLine();

                    
                    
                    
                    try {	
                    	String response = ((FrontEndClinica)client).listarEspecialidadesServer(clinicaID);
                    	System.out.println(response); 
                    	
                    } catch (SecurityException | IllegalArgumentException e) {
                        e.printStackTrace();
                    }
                    
                    
                    System.out.println("Insira a especialidade: ");
                    int especialidadeID = scanner.nextInt();
                    scanner.nextLine();
                
                    
                    
                    
                    try {	
                    	String response = ((FrontEndClinica)client).marcarConsultasServer(dia, mes, ano, hora, clientID, clinicaID, especialidadeID);
                    	System.out.println(response); 
                    	
                    } catch (SecurityException | IllegalArgumentException e) {
                        e.printStackTrace();
                    }
                    
                    
                    
                    
                    
                   //Ola
                    
                    
                    break;
                    
                case 3:
                	
                	try {	
                    	String response = ((FrontEndClinica)client).listarConsultasServer(clientID);
                    	System.out.println(response); 
                    	
                    } catch (SecurityException | IllegalArgumentException e) {
                        e.printStackTrace();
                    }
                	
                	
                	
                    System.out.println("Insira o número Consulta a cancelar: ");
                    int idConsulta = scanner.nextInt();
                 
                    try {	
                    	String response = ((FrontEndClinica)client).removerConsultaServer(idConsulta);
                    	System.out.println(response); 
                    	
                    } catch (SecurityException | IllegalArgumentException e) {
                        e.printStackTrace();
                    }
                    
                    
                    break;
                case 4:
                    System.out.println("Encerrando o cliente.");
                    scanner.close();
                    return;
                default:
                    System.out.println("Opcao invalida. Tente novamente.");
            }
        }
        
        
        
    }
}









